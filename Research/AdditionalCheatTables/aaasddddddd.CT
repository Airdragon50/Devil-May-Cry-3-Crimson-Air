<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="34">
  <CheatEntries>
    <CheatEntry>
      <ID>82</ID>
      <Description>"air taunt"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
dmc3.exe+1E99F2: // 0x7FF6623F99F2
nop 2

dmc3.exe+1E9A0D: // 0x7FF6623F9A0D
nop 2

//dmc3.exe+1E9A3E: // 0x7FF6623F9A3E
//db BA C2 00 00 00 // moveid

[DISABLE]
dmc3.exe+1E99F2:
db 74 5F // je dmc3.exe+1E9A53

dmc3.exe+1E9A0D:
db 75 44 // jne dmc3.exe+1E9A53

//dmc3.exe+1E9A3E:
//db BA 12 00 00 00 // mov edx,00000012
</AssemblerScript>
      <CheatEntries>
        <CheatEntry>
          <ID>97</ID>
          <Description>"asdfgdfgssdsssaaaa"</Description>
          <LastState/>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : dmc3.exe
  Version: 
  Date   : 2023-10-05
  Author : sssiy_8fxwi52

  This script does blah blah blah
}

[ENABLE]

aobscanmodule(gfhfhgfgh,dmc3.exe,E8 85 6F FF FF) // should be unique
alloc(newmem,$1000,gfhfhgfgh)

label(code)
label(return)

newmem:

code:

  //mov rax,00000000000000C2
  //mov rbx,00000000047FE240
  //mov rcx,00000000047FE240
  mov rdx,0000000000000011
  //mov rsi,0

  //mov rdi,00007FF7B28A06A0

  //mov r9,00000000FFFFFFFF
  //mov r10,0000000000000012
  //mov r11,000000F4898FF548

  mov word ptr [rcx+3fa4],c2
  call dmc3.exe+1E09D0 // default
  //call dmc3.exe+1E0800
  jmp return

gfhfhgfgh:
  jmp newmem
return:
registersymbol(gfhfhgfgh)

[DISABLE]

gfhfhgfgh:
  db E8 85 6F FF FF

unregistersymbol(gfhfhgfgh)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: dmc3.exe+1E9A46

dmc3.exe+1E9A19: 48 8D 3D 60 34 B8 00  - lea rdi,[dmc3.exe+D6CE80]
dmc3.exe+1E9A20: 48 8B CF              - mov rcx,rdi
dmc3.exe+1E9A23: E8 18 D8 14 00        - call dmc3.exe+337240
dmc3.exe+1E9A28: 0F B7 C0              - movzx eax,ax
dmc3.exe+1E9A2B: 0F B7 44 47 0A        - movzx eax,word ptr [rdi+rax*2+0A]
dmc3.exe+1E9A30: 48 8B 7C 24 30        - mov rdi,[rsp+30]
dmc3.exe+1E9A35: 66 85 83 E4 74 00 00  - test [rbx+000074E4],ax
dmc3.exe+1E9A3C: 74 15                 - je dmc3.exe+1E9A53
dmc3.exe+1E9A3E: BA 12 00 00 00        - mov edx,00000012
dmc3.exe+1E9A43: 48 8B CB              - mov rcx,rbx
// ---------- INJECTING HERE ----------
dmc3.exe+1E9A46: E8 85 6F FF FF        - call dmc3.exe+1E09D0
// ---------- DONE INJECTING  ----------
dmc3.exe+1E9A4B: B0 01                 - mov al,01
dmc3.exe+1E9A4D: 48 83 C4 20           - add rsp,20
dmc3.exe+1E9A51: 5B                    - pop rbx
dmc3.exe+1E9A52: C3                    - ret 
dmc3.exe+1E9A53: 32 C0                 - xor al,al
dmc3.exe+1E9A55: 48 83 C4 20           - add rsp,20
dmc3.exe+1E9A59: 5B                    - pop rbx
dmc3.exe+1E9A5A: C3                    - ret 
dmc3.exe+1E9A5B: CC                    - int 3 
dmc3.exe+1E9A5C: CC                    - int 3 
}
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
</CheatTable>
